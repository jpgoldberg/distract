  *** THIS DOCUMENTATION IS PART OF THE distrat/askmap PACKAGE
  *** PACKAGE OF PROGRAMS OF CAUSE MAP ANALYSIS.  YOU SHOULD
  *** READ THE FILE "DISCLAIMER" BEFORE USING ANYTHING HERE.
  ***
  *** YOU MUST READ THE FILE "LICENSE" BEFORE DISTRIBUTING ANY
  *** OF THE FILES OR DERIVIATIVES OF THEM.  YOU SHOULD
  *** NOT HAVE PAID FOR THIS SOFTWARE OR SOFTWARE INCORPERATING
  *** IT BEYOND MEDIA AND HANDLING CHARGES.
  (c) 1994, Jeff Goldberg

	INSTALLING the distrat/avmap program on DOS

INSTALLING THE EXECUTABLES

If you are only the executables, then simply put the .exe files
in a directory searched by your path.  Recall that the
the .aml files used by askmap must be in the directory that
askmap is run from if you wish to use those features (askmap.exe)
will run correctly without them, but will only run in English.

Keep the documentation.  Even if most of the documentation is
irrelevent for your needs, your needs might change.

Keep the source files.  There are two reasons for this.  The
first is the merely legel one that to comply with the license
agreement, you must make the source files available to anyone
you distribute the programs to if they request it.  This
is part of your legal responsibility if you distribute the
programs.  Reread the file LISENCE if you don't understand
the details or the rational.

The second reason to keep the sources is that maybe years
from now you will need some feature that might easily be
added to the program, but isn't there now.  Or you will
need the programs to behave a little bit differently.
Since there is no promise on the part of either the
author or the person who gave you these programs
(unless they stated so explicitly) to maintain or
improve these programs, you may have to do so yourself.
Even if you are not a programmer, you must certainly know
someone who is.

So once you have put the executables where you want them, have
looked at the documentation, and have stored away the documentation
and the sources you are ready to use them.


MAKING THE EXECUTABLES

If you wish to recompile the programs, then the installation is
naturally more complicated.  If not, then you don't need to
read any more.

All source files are stored in the source directory.  In that
directory there will be a number of Makefiles (makefile.tcc and
makefile.unx) are the two that exist as of this writing.

The file Makefile.tcc works with Borland's Tubro CC version 3.
If you have such a C compliler you should be able to just
type 

C> make -f makefile.tcc all

If you used djgpp (and that make) then

C> make -f makefile.djg all

And all will be made.  You may get compiler warnings about
arguments not used in particular functions, and function main not
returning a value to caller.  Neither are a problem.  The
former is because there are some "dummy" functions in the
source which do nothing, but are left as hooks for further
and local developments.  The latter is because the tcc lint
checker doesn't know that exit() exits.

You may have to make some changes in Makefile.  In particular
you may want some forms of optimization, or specifications of
machine types, etc.  Also, depending on particular facts about
your C libraries you may need to change some flags.

If you are using another compiler with different command line
syntax, you will have to build your own makefile using the
once provided as a sample.  If you do build a succesful make
file, please try send it to me, so that I can include it
(giving you proper credit) in futher releases.

The most particular ways that C compilers seem to differ is
that older ones take the value returned by malloc() as
being of type pointer to character (char *), while ANSI
has a new type specifically for dealing with something
that could be a pointer to anything as (void *).  If
you are using an older C compiler, then you might have
to set the predefine ANYCHARPTR by uncommenting a 
line in the makefile.

Some libraries have the function rint() (round to integer)
and others don't.  If you don't have it, then you
will get an error message when trying to compile (link actually)
drsort which says something about an unresolved external _rint.
If this happens to you, then you will need to uncomment the
appropriate line in the makefile.

Again with drsort.  If your compiler or libraries are set
up with math functions like sqrt() or floor() or fabs() in
a separate math library (like on most Unix systems), then
you will need to set DRSTRTLIB to "-lm" (or however you
specify the math library) in the makefile.

Once everything is made, it is just a matter of installing the
executables in your path.
